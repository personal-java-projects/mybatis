<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 这里的namespace当使用代理开发方式时，需要改为对应的javaMapper的全限定名
 这里是com.example.proxyDao.UserMapper-->
<mapper namespace="com.example.proxyDao.UserMapper">
    <!-- 查询操作 -->
    <select id="findAll" resultType="User">
        select * from User
    </select>

    <!-- 根据id,查询操作 -->
    <select id="findById" resultType="User" parameterType="java.lang.Integer">
        select * from User where id=#{id}
    </select>

    <!-- 插入操作 -->
    <insert id="save" parameterType="com.example.domain.User">
        <!-- 这里填入的不是？占位符，是实体类对应的属性名 -->
        insert into user values (#{id},#{username},#{password},#{birthday})
    </insert>

    <!-- 修改操作 -->
    <update id="update" parameterType="com.example.domain.User">
        update user set username=#{username}, password=#{password} where id=#{id}
    </update>

    <!-- 删除操作 -->
    <delete id="delete" parameterType="int">
        delete from user where id=#{id}
    </delete>
    
    <!-- sql语句的抽取 -->
    <sql id="selectUser">
        select * from user
    </sql>

    <!-- 根据条件查询 -->
    <select id="findByCondition" parameterType="User" resultType="User">
        <include refid="selectUser"></include>
        <where>
            <if test="id != 0">
                and id=#{id}
            </if>
            <if test="username != null">
                and username=#{username}
            </if>
            <if test="password != null">
                and password=#{password}
            </if>
        </where>
    </select>

    <!-- 根据ids进行查询 -->
    <select id="findByIds" parameterType="java.util.List" resultType="User">
        <include refid="selectUser"></include>
        <where>
            <!-- item负责接收list中的每一个值,这里的list是一个变量，代表传过来的数组 -->
            <foreach collection="list" open="id in(" close=")" item="id" separator=",">
                #{id}
            </foreach>
        </where>
    </select>
</mapper>